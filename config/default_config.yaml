# Default Configuration for CFD GNN Pipeline

# Data roots - these should point to the directories containing your CFD cases
train_root: '/home/student2/ethz/CFD_Ubend_other'
val_root:   '/home/student2/ethz/CFD_Ubend_other_val'


# Noisy data directories (will be created by the data preparation script)
# These paths are relative to the project root if not absolute.
noisy_train_root: "/home/student2/ethz/CFD_Ubend_other_noisy" # Example, script should make this configurable
noisy_val_root: "/home/student2/ethz/CFD_Ubend_other_val_noisy"   # Example

# Graph construction parameters
down_n: 10000   # Number of points to downsample to for kNN graphs. Set to 0 or null for no downsampling.
k: 12           # Number of nearest neighbors for kNN graph construction.

# Model architecture (can be overridden by model-specific configs)
h_dim: 128      # Hidden dimension size in GNN layers and MLPs.
layers: 5       # Number of GNN layers.
node_out_features: 4 # Ensure model outputs 4 features (vx,vy,vz,p) for N-S and pressure NRMSE
# encoder_mlp_layers: 2
# decoder_mlp_layers: 2
# gnn_step_mlp_layers: 2

# Optimization parameters
lr: 0.0002
nbins: 64       # Number of bins for histogram calculations (loss and JSD).
epochs: 100     # Total number of training epochs.
batch_size: 1   # Batch size (set to 1 for debugging, can increase later)
patience: 20    # Patience for early stopping and learning rate scheduler (increased from 10)
clip_grad_norm: 1.0 # Value for gradient clipping, null or 0 for no clipping.
seed: 42

# Regularization parameters (L1/L2)
regularization_type: "None" # Options: "L1", "L2", "None"
regularization_lambda: 0.0  # Strength of the regularization

# MRI-like noise injection parameters
p_min: 0.05     # Minimum noise percentage (e.g., 0.05 for 5%).
p_max: 0.15     # Maximum noise percentage (e.g., 0.15 for 15%).

# Time extraction parameters
time_extraction:
  method_priority: ["field_data", "filename", "fixed_dt"]
  field_data_keys: ["TimeValue", "TIME", "Time", "time"]
  filename_pattern: null
  simulation_dt: 0.01 # Example dt, ensure this matches your data if using fixed_dt

# VTK Data Keys
velocity_key: "U"                   # Key for ground truth velocity in input VTKs.
pressure_key: "p"                   # Key for ground truth pressure in input VTKs.
noisy_velocity_key_suffix: "_noisy" # Suffix for noisy velocity field (e.g., "U_noisy").
predicted_velocity_key: "velocity"  # Key used when saving model's predicted velocity in output VTKs.
predicted_pressure_key: "pressure"  # Key used when saving normalized pressure in output VTKs.

# Training & Validation Script Specifics
output_base_dir: "outputs" # Base directory for all run-specific outputs

# Checkpoint paths for validation scripts
flownet_checkpoint_name: "flownet_best.pth"
gao_checkpoint_name: "rotflownet_best.pth"

# Device: "cuda", "cpu", or "auto"
device: "auto"

# Wandb logging
wandb_project: "CFD_GNN_Refactored_Physics"
# wandb_entity: "your_wandb_entity"
# wandb_run_name_prefix: "train_physics_test"

# Default model names for iterating in scripts
model_names:
  - "FlowNet"
  # - "Gao"

# Cases to process for validation (empty means all 'sUbend*' cases found)
cases_to_process: []

# Graph type for training and validation
default_graph_type: "knn"

# Configuration for graph building
graph_config:
  k: 12
  down_n: 10000
  # velocity_key, pressure_key, noisy_velocity_key_suffix taken from top-level

# Configuration for loss functions
loss_config:
  weights:
    supervised: 1.0
    divergence: 0.1   # Continuity equation (∇·u = 0)
    navier_stokes: 0.0 # Momentum equation. Set > 0 to enable.
    lbc: 0.0           # Boundary condition loss. Set > 0 to enable.
    histogram: 0.05
  histogram_bins: 64 # Same as nbins above, but specific to loss calculation context
  # target_divergence: null # or a specific tensor if needed. null implies 0.
  # target_boundary_velocity: 0.0 # For LBC, default 0 (no-slip). Can be specific tensor.
  # LBC specific:
  # boundary_nodes_mask_key: "boundary_mask" # If mask is stored in Data object, this is the key.

  dynamic_loss_balancing:
    enabled: true # Set to true to enable dynamic loss balancing
    lambda_smooth: 0.1 # Smoothing factor for weight updates (paper uses 0.1)
    initial_alpha: 1.0 # Initial weight for supervised loss (Ldata)
    initial_beta: 1.0  # Initial weight for LBC loss
    # LPDE (N-S momentum + continuity) is assumed to have a base weight of 1.0
    # The 'divergence' and 'navier_stokes' weights in loss_config.weights will be
    # overridden by dynamically calculated alpha for 'supervised' and beta for 'lbc'.
    # The 'navier_stokes' weight will apply to the momentum part, and 'divergence' to continuity.
    # Or, more aligned with paper L = LPDE + alpha*Ldata + beta*LBC:
    # supervised_loss_key_for_alpha: "supervised" # Key in loss_weights to be replaced by alpha
    # lbc_loss_key_for_beta: "lbc"                # Key in loss_weights to be replaced by beta
    epsilon_grad_norm: 1.0e-9 # For numerical stability when dividing by grad norms

# Physics parameters
physics:
  reynolds_number: 100.0 # Example Reynolds number, adjust as needed for your specific case.
                         # Required if loss_config.weights.navier_stokes > 0.

# Configuration for on-the-fly validation during training
validation_during_training:
  enabled: true
  frequency: 1 # Validate every N epochs
  use_noisy_data: true # Whether the validation set itself is noisy
  # val_graph_type: "knn" # Default taken from default_graph_type
  # val_graph_config: {} # Default taken from graph_config
  save_validation_fields_vtk: true # Save some VTK files during validation epochs
  log_field_image_sample_idx: 0    # Log field image for the first validation sample

# Configuration for histogram validation performed after training in the main training script
histogram_validation_after_training:
  enabled: false # Can be enabled for detailed post-training analysis
  nbins_jsd: 64

# Configuration for slice-based velocity analysis during validation
slice_analysis:
  enabled: false # Can be enabled for detailed post-training analysis
  axes: ["X", "Y", "Z"]
  num_per_axis: 3
  thickness_percent: 1.0

# Analysis Probes configuration
analysis_probes:
  points:
    enabled: false
    coordinates: []
    velocity_field_name: "velocity"
  slices:
    enabled: false
    definitions: []
    velocity_field_name: "velocity_on_slice"